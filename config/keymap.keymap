//#define ZMK_POINTING_DEFAULT_MOVE_VAL 100 // マウス移動速度

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        mouse_scrl: mouse_wheel_scrl {
            compatible = "zmk,behavior-sensor-rotate-var";
            #sensor-binding-cells = <2>;
            bindings = <&msc>, <&msc>;

            tap-ms = <10>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&kp ESCAPE  &kp Q         &kp W      &kp E         &kp R        &kp T                            &kp Y  &kp U  &kp I      &kp O       &kp P                 &kp DELETE
&kp TAB     &kp A         &kp S      &lt 5 D       &lt 3 F      &lt 2 G                          &kp H  &kp J  &kp K      &kp L       &lt 5 MINUS           &kp BACKSPACE
&kp LCTRL   &kp Z         &kp X      &kp C         &kp V        &kp B           &kp EXCLAMATION  &kp N  &kp M  &kp COMMA  &kp PERIOD  &lt 1 SLASH           &kp ENTER
            &kp LEFT_WIN  &kp LCTRL  &kp LEFT_ALT  &lt 1 SPACE  &kp LEFT_SHIFT  &kp CAPS                                              &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
            >;
        };

        layer_1 {
            bindings = <
&kp LC(LS(T))  &kp LC(W)     &kp LC(T)   &kp LC(LS(TAB))  &kp LC(TAB)     &kp LG(LS(S))                     &kp LC(X)  &kp LA(LEFT)    &mkp MCLK       &kp LA(RIGHT)  &none          &kp DELETE
&kp TAB        &kp LC(A)     &kp LC(S)   &mo 5            &kp LEFT_SHIFT  &kp LCTRL                         &kp LC(C)  &mkp LCLK       &kp UP_ARROW    &mkp RCLK      &trans         &kp BACKSPACE
&kp LC(LS(Z))  &kp LC(Z)     &none       &none            &none           &kp LC(LEFT_SHIFT)  &kp LG(V)     &kp LC(V)  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT      &trans         &kp ENTER
               &kp LEFT_WIN  &bt BT_CLR  &kp LEFT_ALT     &none           &kp LEFT_SHIFT      &kp CAPSLOCK                                                            &kp LC(MINUS)  &kp LC(EQUAL)
            >;
        };

        layer_2 {
            bindings = <
&none    &none  &none  &none  &none           &none                            &kp LS(NUMBER_9)  &kp LS(NUMBER_0)   &kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp DELETE
&kp TAB  &none  &none  &none  &kp LEFT_SHIFT  &none                            &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LS(NUMBER_4)  &kp LS(N5)        &kp LS(NUMBER_6)  &kp BACKSPACE
&none    &none  &none  &none  &none           &none           &kp EXCLAMATION  &kp SEMICOLON     &kp SQT            &kp LS(N7)        &kp LS(N8)        &kp SLASH         &kp ENTER
         &none  &none  &none  &kp SPACE       &kp LEFT_SHIFT  &kp CAPS                                                                                  &kp GRAVE         &kp NON_US_BACKSLASH
            >;
        };

        layer_3 {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4   &kp F5     &kp F6                           &none         &kp EQUAL  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_0
&none   &none   &none   &none    &none      &none                            &kp ASTERISK  &kp PLUS   &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp BACKSPACE
&kp F7  &kp F8  &kp F9  &kp F10  &kp F11    &kp F12         &kp EXCLAMATION  &kp SLASH     &kp MINUS  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp ENTER
        &none   &none   &none    &kp SPACE  &kp LEFT_SHIFT  &kp CAPSLOCK                                                          &kp NUMBER_0  &kp PERIOD
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans          &trans          &trans           &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans          &msc SCRL_UP    &trans           &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_RIGHT  &trans  &trans
        &trans  &trans  &trans  &trans  &trans  &trans                                                           &trans  &trans
            >;
        };

        layer_scroll {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans          &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &kp LEFT_SHIFT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans          &trans  &trans
        &trans  &trans  &trans  &trans  &kp LEFT_SHIFT  &trans                                          &trans  &trans
            >;

            sensor-bindings =
                <&mouse_scrl SCRL_DOWN SCRL_UP>,
                <&mouse_scrl SCRL_UP SCRL_DOWN>;
        };
    };
};
